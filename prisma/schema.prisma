// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Course {
  id        String   @id @default(cuid())
  slug      String   @unique
  title     String
  desc      String?
  lessons   Lesson[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lesson {
  id        String         @id @default(cuid())
  courseId  String
  course    Course         @relation(fields: [courseId], references: [id])
  slug      String
  title     String
  // İçerik blokları: "article" (konu anlatımı), "examples" (örnek sorular), "quiz"
  contents  ContentBlock[]
  order     Int            @default(0)
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@unique([courseId, slug])
}

model ContentBlock {
  id       String      @id @default(cuid())
  lessonId String
  lesson   Lesson      @relation(fields: [lessonId], references: [id])
  type     ContentType
  title    String? // yeni
  markdown String? // yeni (markdown blokları)
  quiz     Quiz?
  order    Int         @default(0)
}

enum ContentType {
  markdown
  quiz
}

model Quiz {
  id             String       @id @default(cuid())
  contentBlockId String       @unique
  contentBlock   ContentBlock @relation(fields: [contentBlockId], references: [id])
  title          String
  questions      Question[]
  // >>> Ekle
  attempts       Attempt[] // Quiz'e ait denemeler
}

model Question {
  id       String   @id @default(cuid())
  quizId   String
  quiz     Quiz     @relation(fields: [quizId], references: [id])
  text     String
  choices  Choice[]
  answerId String? // Doğru şık (opsiyonel: çoklu doğru desteklemek istersen ayrı tablo)
}

model Choice {
  id         String   @id @default(cuid())
  questionId String
  question   Question @relation(fields: [questionId], references: [id])
  text       String
}

model Attempt {
  id        String   @id @default(cuid())
  quizId    String
  quiz      Quiz     @relation(fields: [quizId], references: [id])
  userId    String?
  score     Int
  details   Json?
  createdAt DateTime @default(now())
}
